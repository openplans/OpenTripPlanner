# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # Build the jar package but skip tests for now.
      # TODO(danieljy): Stop skipping tests.
      - run: mvn package -Dmaven.test.skip=true

      - persist_to_workspace:
          root: .
          paths:
            - target/otp-1.3.0-SNAPSHOT-shaded.jar
      - store_artifacts:
          path: target/otp-1.3.0-SNAPSHOT-shaded.jar

  coord-staging:
    machine:
        enabled: true
    working_directory: ~/repo
    environment:
      DEPLOYMENT_TOOLS_PKG: git+https://github.com/sidewalklabs/tools#egg=sidewalk_deployment_tools&subdirectory=deployment_tools

    steps:
      # Checkout step is required to enable the keys.
      - checkout
      - attach_workspace:
          at: .

      # Restore the latest gcloud version (CircleCI knows to look for the most recently written cache entry with a
      # prefix that matches the specified one ("gcloud" in this case).
      - restore_cache:
         keys:
         - gcloud

      - run:
          name: "Update gcloud"
          command: |
             sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update kubectl beta &&
             sudo /opt/google-cloud-sdk/bin/gcloud --quiet components install beta &&
             sudo /opt/google-cloud-sdk/bin/gcloud --quiet components install cloud-datastore-emulator &&
             sudo chmod 757 /home/circleci/.config/gcloud/logs -R

      # Since we can interrogate gcloud's version, we use that info as input to the checksum command that CircleCI
      # runs so that we don't have to re-cache the latest gcloud cache fore every build. CircleCI won't overwrite a
      # cache file that was already written once.
      - run: gcloud --version > /tmp/gcloud-version
      - save_cache:
          paths:
            - /opt/google-cloud-sdk
          key: gcloud-{{checksum "/tmp/gcloud-version"}}

      # Restore the latest deployment-tools cache (python).
      - restore_cache:
          keys:
          - deployment-tools

      - run: pyenv global 3.5.2 2.7.12
      - run: pip3 install --upgrade pip
      - run: pip3 install --upgrade setuptools
      - run: pip3 install --process-dependency-links "$DEPLOYMENT_TOOLS_PKG"

      # We don't have a good way of interrogating the version of the deployment tools, so we just create a new cache
      # entry using the current time. This means we upload this data every time.
      # TODO(danieljy): Fix this problem.
      - save_cache:
          paths:
            - /opt/circleci/.pyenv
          key: deployment-tools-{{epoch}}

      - run: ./coord/download-data.sh

      # We use the name of the job to get the environment for deployment.
      - run: circle_deploy --build --deploy $CIRCLE_JOB coord/deploy/*.yaml

workflows:
  version: 2
  build-and-deploy:
    jobs:
      # Always run the "build" job.
      - build
      # Run the coord-staging job after build, and only for merge to master.
      - coord-staging:
          requires:
            - build
          filters:
            branches:
              only: master
      # Run the coord-prod job after build, and only for releases.
      - coord-prod:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[0-9]{4}-[0-9]{2}-[0-9]{2}(v[0-9]+)?|v[0-9]+(\.[0-9]+)*/